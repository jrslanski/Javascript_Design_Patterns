Treating individual and aggregate objects uniformly

**Objects use other object's fields/methods through inheritance and composition.

Composition lets us make compound objects
    E.g., a mathematical expression composed of simple expressions; or
    A shape group made of several different shapes

Composite design pattern is used to treat both single(scalar) and composite objects uniformly.
    I.e., class Foo and an array (containing Foos) having the same API

Composite: A mechanism for treating individual(scalar) objects and compositions of objects in a 
uniform manner.

